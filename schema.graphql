type Account @entity {
  id: ID!
  gotchisLent: [GotchiLending!] @derivedFrom(field: "lender")
  gotchisBorrowed: [GotchiLending!] @derivedFrom(field: "borrower")
}

type GotchiLending @entity {
  id: ID!
  gotchiId: BigInt!
  gotchiBRS: BigInt!

  agreedPeriod: BigInt!   # Period set in the contract
  actualPeriod: BigInt!   # Actual time the borrower had the gotchi
  startTimestamp: BigInt!
  endTimestamp: BigInt!

  upfrontCost: BigInt
  splitOwner: Int
  splitBorrower: Int
  splitOther: Int

  whitelist: Whitelist

  lender: Account
  borrower: Account
  thirdPartyAddress: Account

  started: Boolean!
  cancelled: Boolean!
  completed: Boolean!

  claimedFUD: BigInt!
  claimedFOMO: BigInt!
  claimedALPHA: BigInt!
  claimedKEK: BigInt!
  fudEquivalent: BigInt!
  totalAlchemica: BigInt!
}

type Whitelist @entity {
  id: ID!
  name: String!
  members: [Bytes!]!
  ownerAddress: Bytes!

  claimedFUD: BigInt!
  claimedFOMO: BigInt!
  claimedALPHA: BigInt!
  claimedKEK: BigInt!
  fudEquivalent: BigInt!
  totalAlchemica: BigInt!
}
